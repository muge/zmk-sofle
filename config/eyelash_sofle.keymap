#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};


/ {
    macros {
        lcmx: lctrl_mx {
                compatible = "zmk,behavior-macro-one-param";
                wait-ms = <0>;
                tap-ms = <0>;
                #binding-cells = <1>;
                bindings
                    = <&macro_param_1to1>
                    , <&macro_press &mo MACRO_PLACEHOLDER>
                    , <&macro_press &kp LCTRL>
                    , <&macro_pause_for_release>
                    , <&macro_release &kp LCTRL>
                    , <&macro_param_1to1>
                    , <&macro_release &mo MACRO_PLACEHOLDER>
                    ;
            };
        lm: lm {
            compatible = "zmk,behavior-macro-two-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &mo MACRO_PLACEHOLDER>
                , <&macro_param_2to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_pause_for_release>
                , <&macro_param_2to1>
                , <&macro_release &kp MACRO_PLACEHOLDER>
                , <&macro_param_1to1>
                , <&macro_release &mo MACRO_PLACEHOLDER>
                ;
        };
        rgbt: rgbtog {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings = <&rgb_ug RGB_TOG>;
            };
        rgbsc: rgbsetcolor {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_COLOR_HSB(255,100,100)>;
        };
        kpesc: kp_escape {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC>;
        };
        spc: kp_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE>;
        };

    };

    behaviors {
        lcmo: lctrl_mo {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <140>;
            bindings = <&lcmx>, <&kp>;
            display-name = "LM Ctrl";
        };
        spmo: space_mo {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <140>;
            bindings = <&mo>, <&spc>;
            display-name = "Space Layer Hold-Tap";
        };
        rgbht: rgb_tap_hold {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <140>;
            bindings = <&rgbt>, <&rgbsc>;
            display-name = "RGB Hold-Tap";
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };


    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&lcmo 1 ESC &kp N1     &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW     &kp N6     &kp N7     &kp N8     &kp N9           &kp N0      &kp MINUS
&kp TAB     &kp Q      &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW   &kp Y      &kp U      &kp I      &kp O            &kp P       &kp BSLH
&mo 1       &kp A      &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW   &kp H      &kp J      &kp K      &kp L            &kp SEMI    &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA  &kp DOT          &kp FSLH    &kp RSHFT
&kp C_MUTE  &kp LGUI   &kp LEFT_ALT  &mo 2         &kp LCTRL   &kp SPACE    &kp ENTER    &spmo 1 0  &kp ENTER  &kp BSPC      &lt 3 K_APP      &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Base";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &kp EQUAL
&kp LCTRL   &kp LSHFT        &kp LALT        &kp PG_UP        &trans           &trans             &mmv MOVE_DOWN   &kp F11          &kp F12          &kp UP      &kp MINUS  &kp EQUAL         &kp CAPS
&trans      &kp LEFT         &kp RIGHT       &kp PG_DN        &kp HOME         &kp END            &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LBRC          &kp RBRC
&trans      &trans           &trans          &trans           &trans           &trans             &mmv MOVE_RIGHT  &trans           &trans           &kp INSERT  &trans     &trans            &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &kp DEL      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "Func";
        };



        layer_2 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &kp EQUAL
&kp LALT    &kp PG_UP        &kp UP          &kp PG_DN        &trans           &trans             &mmv MOVE_DOWN   &kp F11          &kp F12          &kp UP      &kp MINUS  &kp EQUAL         &kp CAPS
&kp LCTRL   &kp LEFT         &kp DOWN        &kp RIGHT        &kp HOME         &kp END            &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LBRC          &kp RBRC
&trans      &trans           &trans          &trans           &trans           &trans             &mmv MOVE_RIGHT  &trans           &trans           &kp INSERT  &trans     &trans            &trans
&kp C_MUTE  &mo 3            &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &kp RS(ENTER)      &kp DEL     &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "Func 2";
        };

        layer_3 {
            bindings = <
&kp TILDE  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &mmv MOVE_UP     &kp F6           &kp F7           &kp F8           &kp F9           &kp F10      &trans
&trans     &bt BT_CLR       &bt BT_CLR_ALL   &trans           &trans           &trans           &mmv MOVE_DOWN   &kp F11          &kp F12          &rgb_ug RGB_HUI  &kp UNDER        &kp PLUS     &trans
&trans     &out OUT_USB     &out OUT_BLE     &trans           &trans           &trans           &mmv MOVE_LEFT   &rgbht 0 0       &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &kp LBRC     &kp RBRC
&trans     &sys_reset       &trans           &bootloader      &trans           &trans           &mmv MOVE_RIGHT  &rgb_ug RGB_EFF  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &bootloader  &trans
&trans     &trans           &trans           &trans           &trans           &mkp RCLK        &mkp LCLK        &trans           &trans           &trans           &sys_reset       &soft_off
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "Meta";
        };

    };
};
